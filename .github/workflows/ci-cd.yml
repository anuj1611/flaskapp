name: build-and-deploy

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted   # use your Windows self-hosted runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ðŸ”¹ Make sure Docker is up and running
      - name: Verify Docker
        run: docker version

      - name: Verify Minikube
        run: kubectl get nodes

      # ðŸ”¹ Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest .

      # ðŸ”¹ Security scan (Trivy or similar)
      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest

      # ðŸ”¹ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ðŸ”¹ Login to ECR
      - name: Login to AWS ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # ðŸ”¹ Push to ECR
      - name: Push Docker image
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO }}:latest

      # ðŸ”¹ Deploy to Minikube (local)
      - name: Deploy to Kubernetes (Minikube)
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment/flaskapp-deployment
